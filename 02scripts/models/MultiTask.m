function performance_MT = MultiTask(Xtr,...
                                    Ytr, ...
                                    Xte,...
                                    Yte,...
                                    obj_func_str,...
                                    opts,...
                                    optional_cv_fold, ...
                                    eval_func_str)
                                
    fprintf('\tinner CV started')
    [best_lambda1, best_lambda2, ~] = CrossValidationDE(Xtr,...
                                                        Ytr, ...
                                                        obj_func_str,...
                                                        opts,...
                                                        optional_cv_fold, ...
                                                        eval_func_str);
                                                    
    disp(['Best lambda : ' num2str(best_lambda1) ' , ' num2str(best_lambda2)]);
    %用最优的超参来构建模型
    %train
    %warm start for one turn
    [~, C, P, Q, ~, ~] = Logistic_Dirty(Xtr, Ytr, best_lambda1, best_lambda2, opts);
    opts2=opts;
    opts2.init=1;
    opts2.C0=C;
    opts2.P0=P;
    opts2.Q0=Q;
    opts2.tol = 10^-10;
    [W2, C2, ~, ~, ~, ~] = Logistic_Dirty(Xtr, Ytr, best_lambda1, best_lambda2, opts2);

    %test保存当前迭代的所有任务的所有结果
    performance_MT = eval_MTL_allPerformance(Yte, Xte, W2, C2);
end